/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as AuthOtpIndexRouteImport } from './routes/auth/otp/index'

const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/(app)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOtpIndexRoute = AuthOtpIndexRouteImport.update({
  id: '/auth/otp/',
  path: '/auth/otp/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/auth': typeof AuthIndexRoute
  '/auth/otp': typeof AuthOtpIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof appIndexRoute
  '/auth': typeof AuthIndexRoute
  '/auth/otp': typeof AuthOtpIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)/': typeof appIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/auth/otp/': typeof AuthOtpIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/auth/otp'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/auth/otp'
  id: '__root__' | '/(app)/' | '/auth/' | '/auth/otp/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appIndexRoute: typeof appIndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthOtpIndexRoute: typeof AuthOtpIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/otp/': {
      id: '/auth/otp/'
      path: '/auth/otp'
      fullPath: '/auth/otp'
      preLoaderRoute: typeof AuthOtpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  appIndexRoute: appIndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthOtpIndexRoute: AuthOtpIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
