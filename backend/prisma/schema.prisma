// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  name              String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  hederaAccount     HederaAccount?
  sessions          Session[]
  authenticity      Authenticity?
}

model Authenticity {
  id                        String   @id @default(cuid())
  userId                    String   @unique

  domain                    String
  domainVerified            Boolean  @default(false)
  verificationToken         String   @default(uuid()) // for TXT verification
  verificationLastCheckedAt DateTime?

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model HederaAccount {
  accountId String   @id
  privateKey    String
  publicKey     String

  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model OtpRequest {
  id        String   @id @default(cuid())
  email     String
  otp       String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum Creator {
  BUYER
  SELLER
}
enum Visibility {
  PUBLIC
  PRIVATE
}
model NftMetadata {
  id                String      @id @default(cuid())
  tokenId           String      @unique
  creator           Creator
  visibility        Visibility  @default(PRIVATE)

  verified          Boolean     @default(false)
  verificationEmail String?
}
